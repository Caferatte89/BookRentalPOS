package my.edu.tarc.dco.bookrentalpos;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 *
 * @author Looz
 */
public class MemberManager {

    private ArrayList<Member> memberList;
    private DBManager db;

    public MemberManager(DBManager db) {
	memberList = new ArrayList<Member>();
	this.db = db;
	String sql = "SELECT * FROM member;";
	try {
	    java.sql.ResultSet rs = db.resultQuery(sql);
	    while (rs.next()) {
		Member s = new Member(
			rs.getInt("id") + "",
			rs.getString("date"),
			rs.getString("name"),
			rs.getString("phoneNo"),
			rs.getString("email"),
			rs.getString("IC")
		);
		memberList.add(s);
	    }
	} catch (java.sql.SQLException err) {
	    System.out.println(err.getMessage());
	}
    }

    public Member getMember(String memID) {
	for (int i = 0; i < memberList.size(); i++) {
	    if (memberList.get(i).getID().equals(memID)) {
		return memberList.get(i);
	    }
	}
	return null;
    }

    public boolean registerMember(Member mem) {
	String sql = String.format("INSERT INTO member(name, phoneNo, email, IC) VALUES('%s', '%s', '%s', '%s')",
		mem.getName(),
		mem.getContacts(ContactType.PHONE),
		mem.getContacts(ContactType.EMAIL),
		mem.getICNo());
	if (db.updateQuery(sql) == 1) {
	    try {
		// id and date is generated by sqlite, i need to make a copy of it and store it in my preloaded database
		// this query basically get the latest Mmeber entry inserted into database
		ResultSet rs = db.resultQuery("SELECT id, date FROM member WHERE id = (SELECT seq FROM sqlite_sequence WHERE name='member')");
		mem.setID(rs.getInt("id") + "");
		mem.setDateCreated(rs.getString("date"));

		// store in my preloaded database
		memberList.add(mem);
	    } catch (SQLException err) {
		System.out.println(err.getMessage());
	    }
	    return true;
	} else {
	    return false;
	}
    }

    public boolean removeMember(String memID) {
	String sql = String.format("DELETE FROM member WHERE id=\"%s\"", memID);
	if (db.updateQuery(sql) == 1) {
	    memberList.removeIf(e -> e.getID().equals(memID));
	    return true;
	} else {
	    return false;
	}
    }

}
