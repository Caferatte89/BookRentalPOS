package my.edu.tarc.dco.bookrentalpos;

/**
 *
 * @author Looz
 */
import java.sql.ResultSet;
import java.sql.SQLException;

public class StaffManager {

    private Staff[] staffList;
    private int staffCount;
    private DBManager db;
    private final int ARRAY_SIZE = 100;

    public StaffManager(DBManager db) {
	this.db = db;
	staffCount = 0;
	staffList = new Staff[ARRAY_SIZE];
	String sql = "SELECT * FROM staff;";
	try {
	    java.sql.ResultSet rs = db.resultQuery(sql);
	    while (rs.next()) {
		Staff s = new Staff(rs.getInt("id"), rs.getString("date"), rs.getString("name"), rs.getString("password"));
		staffList[staffCount++] = s;
	    }
	} catch (java.sql.SQLException err) {
	    System.out.println(err.getMessage());
	}

    }

    public boolean login(String usrName, String pw) {
	for (int i = 0; i < staffCount; i++) {
	    if (staffList[i].getName().equals(usrName) && staffList[i].getPW().equals(CustomUtil.md5Hash(pw))) {
		return true;
	    }
	}
	return false;
    }

    public Staff getStaff(int staffID) {
	for (int i = 0; i < staffCount; i++) {
	    if (staffList[i].getID() == staffID) {
		return staffList[i];
	    }
	}
	return null;
    }

    // return true if registeration successful
    // return false if same name existed
    public boolean registerStaff(Staff stf) {

	String sql = String.format("INSERT INTO staff(name, password) VALUES(\"%s\", \"%s\")", stf.getName(), stf.getPW());
	// updateQuery() return rows affected from the sql query
	if (db.updateQuery(sql) == 1) {
	    try {
		// id and date is generated by sqlite, i need to make a copy of it and store it in my preloaded database
		// this query basically get the latest Staff entry inserted into database
		ResultSet rs = db.resultQuery("SELECT id, date FROM staff WHERE id = (SELECT seq FROM sqlite_sequence WHERE name='staff')");
		stf.setID(rs.getInt("id"));
		stf.setDateCreated(rs.getString("date"));

		// store in my preloaded database
		staffList[staffCount++] = stf;
	    } catch (SQLException err) {
		System.out.println(err.getMessage());
	    }
	    return true;
	} else {
	    return false;
	}
    }

    public boolean removeStaff(int staffID) {
	String sql = String.format("DELETE FROM staff WHERE id=%d", staffID);
	Staff[] tmpList = new Staff[ARRAY_SIZE];
	if (db.updateQuery(sql) == 1) {
	    int b = 0;
	    for (int a = 0; a < staffCount; a++) {
		if (staffList[a].getID() != staffID) {
		    tmpList[b++] = staffList[a];
		}
	    }
	    staffList = tmpList.clone();
	    staffCount--;
	    return true;
	} else {
	    return false;
	}
    }

}
